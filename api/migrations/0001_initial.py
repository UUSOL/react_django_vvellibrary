# Generated by Django 3.2.3 on 2021-07-20 11:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='Enter a first name of the author', max_length=50)),
                ('last_name', models.CharField(help_text='Enter a last name of the author', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a genre of the book', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter a title for the book', max_length=100)),
                ('ISBN', models.CharField(help_text='Enter a ISBN number for the book', max_length=30)),
                ('summary', models.TextField(help_text='Enter a summary for the book', max_length=1500)),
                ('ranking', models.SmallIntegerField(help_text='Enter a ranking for the book', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('url_to_download', models.URLField(help_text='Enter an url for the source of description', null=True)),
                ('url_to_read', models.URLField(help_text='Enter an url for the source of description', null=True)),
                ('authors', models.ManyToManyField(help_text='Select or add an Author for the book', to='api.Author')),
                ('genre', models.ManyToManyField(help_text='Select or add a genre for the book', to='api.Genre')),
                ('users', models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
